ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	SystemInit:
  25              	.LFB40:
  26              		.file 1 "Core/Src/system_stm32l0xx.c"
   1:Core/Src/system_stm32l0xx.c **** /**
   2:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l0xx.c ****   * @file    system_stm32l0xx.c
   4:Core/Src/system_stm32l0xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32l0xx.c ****   *
   7:Core/Src/system_stm32l0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l0xx.c ****   *   user application:
   9:Core/Src/system_stm32l0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l0xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l0xx.c ****   *                      the "startup_stm32l0xx.s" file.
  12:Core/Src/system_stm32l0xx.c ****   *
  13:Core/Src/system_stm32l0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l0xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l0xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l0xx.c ****   *
  17:Core/Src/system_stm32l0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l0xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l0xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l0xx.c ****   *
  21:Core/Src/system_stm32l0xx.c ****   *
  22:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32l0xx.c ****   * @attention
  24:Core/Src/system_stm32l0xx.c ****   *
  25:Core/Src/system_stm32l0xx.c ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  26:Core/Src/system_stm32l0xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32l0xx.c ****   *
  28:Core/Src/system_stm32l0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32l0xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32l0xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32l0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32l0xx.c ****   *
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 2


  33:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32l0xx.c ****   */
  35:Core/Src/system_stm32l0xx.c **** 
  36:Core/Src/system_stm32l0xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32l0xx.c ****   * @{
  38:Core/Src/system_stm32l0xx.c ****   */
  39:Core/Src/system_stm32l0xx.c **** 
  40:Core/Src/system_stm32l0xx.c **** /** @addtogroup stm32l0xx_system
  41:Core/Src/system_stm32l0xx.c ****   * @{
  42:Core/Src/system_stm32l0xx.c ****   */
  43:Core/Src/system_stm32l0xx.c **** 
  44:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Includes
  45:Core/Src/system_stm32l0xx.c ****   * @{
  46:Core/Src/system_stm32l0xx.c ****   */
  47:Core/Src/system_stm32l0xx.c **** 
  48:Core/Src/system_stm32l0xx.c **** #include "stm32l0xx.h"
  49:Core/Src/system_stm32l0xx.c **** 
  50:Core/Src/system_stm32l0xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32l0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000U) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32l0xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32l0xx.c **** 
  54:Core/Src/system_stm32l0xx.c **** #if !defined  (MSI_VALUE)
  55:Core/Src/system_stm32l0xx.c ****   #define MSI_VALUE    ((uint32_t)2097152U) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32l0xx.c **** #endif /* MSI_VALUE */
  57:Core/Src/system_stm32l0xx.c **** 
  58:Core/Src/system_stm32l0xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32l0xx.c ****   #define HSI_VALUE    ((uint32_t)16000000U) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32l0xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32l0xx.c **** 
  62:Core/Src/system_stm32l0xx.c **** 
  63:Core/Src/system_stm32l0xx.c **** /**
  64:Core/Src/system_stm32l0xx.c ****   * @}
  65:Core/Src/system_stm32l0xx.c ****   */
  66:Core/Src/system_stm32l0xx.c **** 
  67:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32l0xx.c ****   * @{
  69:Core/Src/system_stm32l0xx.c ****   */
  70:Core/Src/system_stm32l0xx.c **** 
  71:Core/Src/system_stm32l0xx.c **** /**
  72:Core/Src/system_stm32l0xx.c ****   * @}
  73:Core/Src/system_stm32l0xx.c ****   */
  74:Core/Src/system_stm32l0xx.c **** 
  75:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Defines
  76:Core/Src/system_stm32l0xx.c ****   * @{
  77:Core/Src/system_stm32l0xx.c ****   */
  78:Core/Src/system_stm32l0xx.c **** /************************* Miscellaneous Configuration ************************/
  79:Core/Src/system_stm32l0xx.c **** 
  80:Core/Src/system_stm32l0xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  81:Core/Src/system_stm32l0xx.c ****          configuration. */
  82:Core/Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  83:Core/Src/system_stm32l0xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  84:Core/Src/system_stm32l0xx.c ****      remap of boot address selected */
  85:Core/Src/system_stm32l0xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  86:Core/Src/system_stm32l0xx.c **** 
  87:Core/Src/system_stm32l0xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  88:Core/Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  89:Core/Src/system_stm32l0xx.c ****      in Sram else user remap will be done in Flash. */
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 3


  90:Core/Src/system_stm32l0xx.c **** /* #define VECT_TAB_SRAM */
  91:Core/Src/system_stm32l0xx.c **** #if defined(VECT_TAB_SRAM)
  92:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
  93:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
  94:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  95:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
  96:Core/Src/system_stm32l0xx.c **** #else
  97:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
  98:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
  99:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 100:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
 101:Core/Src/system_stm32l0xx.c **** #endif /* VECT_TAB_SRAM */
 102:Core/Src/system_stm32l0xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 103:Core/Src/system_stm32l0xx.c **** 
 104:Core/Src/system_stm32l0xx.c **** /******************************************************************************/
 105:Core/Src/system_stm32l0xx.c **** /**
 106:Core/Src/system_stm32l0xx.c ****   * @}
 107:Core/Src/system_stm32l0xx.c ****   */
 108:Core/Src/system_stm32l0xx.c **** 
 109:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Macros
 110:Core/Src/system_stm32l0xx.c ****   * @{
 111:Core/Src/system_stm32l0xx.c ****   */
 112:Core/Src/system_stm32l0xx.c **** 
 113:Core/Src/system_stm32l0xx.c **** /**
 114:Core/Src/system_stm32l0xx.c ****   * @}
 115:Core/Src/system_stm32l0xx.c ****   */
 116:Core/Src/system_stm32l0xx.c **** 
 117:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Variables
 118:Core/Src/system_stm32l0xx.c ****   * @{
 119:Core/Src/system_stm32l0xx.c ****   */
 120:Core/Src/system_stm32l0xx.c ****   /* This variable is updated in three ways:
 121:Core/Src/system_stm32l0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 122:Core/Src/system_stm32l0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 123:Core/Src/system_stm32l0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 124:Core/Src/system_stm32l0xx.c ****          Note: If you use this function to configure the system clock; then there
 125:Core/Src/system_stm32l0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 126:Core/Src/system_stm32l0xx.c ****                variable is updated automatically.
 127:Core/Src/system_stm32l0xx.c ****   */
 128:Core/Src/system_stm32l0xx.c ****   uint32_t SystemCoreClock = 2097152U; /* 32.768 kHz * 2^6 */
 129:Core/Src/system_stm32l0xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 130:Core/Src/system_stm32l0xx.c ****   const uint8_t APBPrescTable[8] = {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 131:Core/Src/system_stm32l0xx.c ****   const uint8_t PLLMulTable[9] = {3U, 4U, 6U, 8U, 12U, 16U, 24U, 32U, 48U};
 132:Core/Src/system_stm32l0xx.c **** 
 133:Core/Src/system_stm32l0xx.c **** /**
 134:Core/Src/system_stm32l0xx.c ****   * @}
 135:Core/Src/system_stm32l0xx.c ****   */
 136:Core/Src/system_stm32l0xx.c **** 
 137:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_FunctionPrototypes
 138:Core/Src/system_stm32l0xx.c ****   * @{
 139:Core/Src/system_stm32l0xx.c ****   */
 140:Core/Src/system_stm32l0xx.c **** 
 141:Core/Src/system_stm32l0xx.c **** /**
 142:Core/Src/system_stm32l0xx.c ****   * @}
 143:Core/Src/system_stm32l0xx.c ****   */
 144:Core/Src/system_stm32l0xx.c **** 
 145:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Functions
 146:Core/Src/system_stm32l0xx.c ****   * @{
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 4


 147:Core/Src/system_stm32l0xx.c ****   */
 148:Core/Src/system_stm32l0xx.c **** 
 149:Core/Src/system_stm32l0xx.c **** /**
 150:Core/Src/system_stm32l0xx.c ****   * @brief  Setup the microcontroller system.
 151:Core/Src/system_stm32l0xx.c ****   * @param  None
 152:Core/Src/system_stm32l0xx.c ****   * @retval None
 153:Core/Src/system_stm32l0xx.c ****   */
 154:Core/Src/system_stm32l0xx.c **** void SystemInit (void)
 155:Core/Src/system_stm32l0xx.c **** {
  27              		.loc 1 155 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 156:Core/Src/system_stm32l0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 157:Core/Src/system_stm32l0xx.c **** #if defined (USER_VECT_TAB_ADDRESS)
 158:Core/Src/system_stm32l0xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 159:Core/Src/system_stm32l0xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 160:Core/Src/system_stm32l0xx.c **** }
  32              		.loc 1 160 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
  38              		.global	__aeabi_uidiv
  39              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  40              		.align	1
  41              		.global	SystemCoreClockUpdate
  42              		.syntax unified
  43              		.code	16
  44              		.thumb_func
  46              	SystemCoreClockUpdate:
  47              	.LFB41:
 161:Core/Src/system_stm32l0xx.c **** 
 162:Core/Src/system_stm32l0xx.c **** /**
 163:Core/Src/system_stm32l0xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 164:Core/Src/system_stm32l0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 165:Core/Src/system_stm32l0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 166:Core/Src/system_stm32l0xx.c ****   *         other parameters.
 167:Core/Src/system_stm32l0xx.c ****   *
 168:Core/Src/system_stm32l0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 169:Core/Src/system_stm32l0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 170:Core/Src/system_stm32l0xx.c ****   *         based on this variable will be incorrect.
 171:Core/Src/system_stm32l0xx.c ****   *
 172:Core/Src/system_stm32l0xx.c ****   * @note   - The system frequency computed by this function is not the real
 173:Core/Src/system_stm32l0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 174:Core/Src/system_stm32l0xx.c ****   *           constant and the selected clock source:
 175:Core/Src/system_stm32l0xx.c ****   *
 176:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI
 177:Core/Src/system_stm32l0xx.c ****   *             value as defined by the MSI range.
 178:Core/Src/system_stm32l0xx.c ****   *
 179:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 180:Core/Src/system_stm32l0xx.c ****   *
 181:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 182:Core/Src/system_stm32l0xx.c ****   *
 183:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 184:Core/Src/system_stm32l0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 5


 185:Core/Src/system_stm32l0xx.c ****   *
 186:Core/Src/system_stm32l0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 187:Core/Src/system_stm32l0xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 188:Core/Src/system_stm32l0xx.c ****   *             in voltage and temperature.
 189:Core/Src/system_stm32l0xx.c ****   *
 190:Core/Src/system_stm32l0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 191:Core/Src/system_stm32l0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 192:Core/Src/system_stm32l0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 193:Core/Src/system_stm32l0xx.c ****   *              have wrong result.
 194:Core/Src/system_stm32l0xx.c ****   *
 195:Core/Src/system_stm32l0xx.c ****   *         - The result of this function could be not correct when using fractional
 196:Core/Src/system_stm32l0xx.c ****   *           value for HSE crystal.
 197:Core/Src/system_stm32l0xx.c ****   * @param  None
 198:Core/Src/system_stm32l0xx.c ****   * @retval None
 199:Core/Src/system_stm32l0xx.c ****   */
 200:Core/Src/system_stm32l0xx.c **** void SystemCoreClockUpdate (void)
 201:Core/Src/system_stm32l0xx.c **** {
  48              		.loc 1 201 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52 0000 10B5     		push	{r4, lr}
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 4, -8
  55              		.cfi_offset 14, -4
 202:Core/Src/system_stm32l0xx.c ****   uint32_t tmp = 0U, pllmul = 0U, plldiv = 0U, pllsource = 0U, msirange = 0U;
  56              		.loc 1 202 3 view .LVU3
  57              	.LVL0:
 203:Core/Src/system_stm32l0xx.c **** 
 204:Core/Src/system_stm32l0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 205:Core/Src/system_stm32l0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  58              		.loc 1 205 3 view .LVU4
  59              		.loc 1 205 12 is_stmt 0 view .LVU5
  60 0002 344B     		ldr	r3, .L11
  61 0004 DA68     		ldr	r2, [r3, #12]
  62              		.loc 1 205 7 view .LVU6
  63 0006 0C23     		movs	r3, #12
  64 0008 1340     		ands	r3, r2
  65              	.LVL1:
 206:Core/Src/system_stm32l0xx.c **** 
 207:Core/Src/system_stm32l0xx.c ****   switch (tmp)
  66              		.loc 1 207 3 is_stmt 1 view .LVU7
  67 000a 042B     		cmp	r3, #4
  68 000c 3AD0     		beq	.L3
  69 000e 082B     		cmp	r3, #8
  70 0010 44D0     		beq	.L4
  71 0012 002B     		cmp	r3, #0
  72 0014 1ED0     		beq	.L10
 208:Core/Src/system_stm32l0xx.c ****   {
 209:Core/Src/system_stm32l0xx.c ****     case 0x00U:  /* MSI used as system clock */
 210:Core/Src/system_stm32l0xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> RCC_ICSCR_MSIRANGE_Pos;
 211:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 212:Core/Src/system_stm32l0xx.c ****       break;
 213:Core/Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 214:Core/Src/system_stm32l0xx.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 215:Core/Src/system_stm32l0xx.c ****       {
 216:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE / 4U;
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 6


 217:Core/Src/system_stm32l0xx.c ****       }
 218:Core/Src/system_stm32l0xx.c ****       else
 219:Core/Src/system_stm32l0xx.c ****       {
 220:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE;
 221:Core/Src/system_stm32l0xx.c ****       }
 222:Core/Src/system_stm32l0xx.c ****       break;
 223:Core/Src/system_stm32l0xx.c ****     case 0x08U:  /* HSE used as system clock */
 224:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = HSE_VALUE;
 225:Core/Src/system_stm32l0xx.c ****       break;
 226:Core/Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 227:Core/Src/system_stm32l0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 228:Core/Src/system_stm32l0xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
  73              		.loc 1 228 7 view .LVU8
  74              		.loc 1 228 19 is_stmt 0 view .LVU9
  75 0016 2F4B     		ldr	r3, .L11
  76              	.LVL2:
  77              		.loc 1 228 19 view .LVU10
  78 0018 D868     		ldr	r0, [r3, #12]
  79              	.LVL3:
 229:Core/Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
  80              		.loc 1 229 7 is_stmt 1 view .LVU11
  81              		.loc 1 229 19 is_stmt 0 view .LVU12
  82 001a D968     		ldr	r1, [r3, #12]
  83              	.LVL4:
 230:Core/Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
  84              		.loc 1 230 7 is_stmt 1 view .LVU13
  85              		.loc 1 230 36 is_stmt 0 view .LVU14
  86 001c 800C     		lsrs	r0, r0, #18
  87              	.LVL5:
  88              		.loc 1 230 36 view .LVU15
  89 001e 0F22     		movs	r2, #15
  90              	.LVL6:
  91              		.loc 1 230 36 view .LVU16
  92 0020 0240     		ands	r2, r0
  93              		.loc 1 230 27 view .LVU17
  94 0022 2D48     		ldr	r0, .L11+4
  95 0024 845C     		ldrb	r4, [r0, r2]
  96              	.LVL7:
 231:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
  97              		.loc 1 231 7 is_stmt 1 view .LVU18
  98              		.loc 1 231 24 is_stmt 0 view .LVU19
  99 0026 8A0D     		lsrs	r2, r1, #22
 100 0028 0321     		movs	r1, #3
 101              	.LVL8:
 102              		.loc 1 231 24 view .LVU20
 103 002a 1140     		ands	r1, r2
 104              		.loc 1 231 14 view .LVU21
 105 002c 0131     		adds	r1, r1, #1
 106              	.LVL9:
 232:Core/Src/system_stm32l0xx.c **** 
 233:Core/Src/system_stm32l0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 107              		.loc 1 233 7 is_stmt 1 view .LVU22
 108              		.loc 1 233 22 is_stmt 0 view .LVU23
 109 002e DB68     		ldr	r3, [r3, #12]
 110              	.LVL10:
 234:Core/Src/system_stm32l0xx.c **** 
 235:Core/Src/system_stm32l0xx.c ****       if (pllsource == 0x00U)
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 7


 111              		.loc 1 235 7 is_stmt 1 view .LVU24
 112              		.loc 1 235 10 is_stmt 0 view .LVU25
 113 0030 DB03     		lsls	r3, r3, #15
 114 0032 43D4     		bmi	.L8
 115              	.LVL11:
 236:Core/Src/system_stm32l0xx.c ****       {
 237:Core/Src/system_stm32l0xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
 238:Core/Src/system_stm32l0xx.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 116              		.loc 1 238 9 is_stmt 1 view .LVU26
 117              		.loc 1 238 17 is_stmt 0 view .LVU27
 118 0034 274B     		ldr	r3, .L11
 119 0036 1B68     		ldr	r3, [r3]
 120              		.loc 1 238 12 view .LVU28
 121 0038 DB06     		lsls	r3, r3, #27
 122 003a 33D5     		bpl	.L9
 239:Core/Src/system_stm32l0xx.c ****         {
 240:Core/Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE / 4U) * pllmul) / plldiv);
 123              		.loc 1 240 11 is_stmt 1 view .LVU29
 124              		.loc 1 240 48 is_stmt 0 view .LVU30
 125 003c 6301     		lsls	r3, r4, #5
 126 003e 1B1B     		subs	r3, r3, r4
 127 0040 9801     		lsls	r0, r3, #6
 128 0042 C01A     		subs	r0, r0, r3
 129 0044 C000     		lsls	r0, r0, #3
 130 0046 0019     		adds	r0, r0, r4
 131 0048 0002     		lsls	r0, r0, #8
 132              		.loc 1 240 58 view .LVU31
 133 004a FFF7FEFF 		bl	__aeabi_uidiv
 134              	.LVL12:
 135              		.loc 1 240 27 view .LVU32
 136 004e 234B     		ldr	r3, .L11+8
 137 0050 1860     		str	r0, [r3]
 138 0052 0BE0     		b	.L6
 139              	.LVL13:
 140              	.L10:
 210:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 141              		.loc 1 210 7 is_stmt 1 view .LVU33
 210:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 142              		.loc 1 210 22 is_stmt 0 view .LVU34
 143 0054 1F4B     		ldr	r3, .L11
 144              	.LVL14:
 210:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 145              		.loc 1 210 22 view .LVU35
 146 0056 5A68     		ldr	r2, [r3, #4]
 147              	.LVL15:
 210:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 148              		.loc 1 210 52 view .LVU36
 149 0058 520B     		lsrs	r2, r2, #13
 210:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 150              		.loc 1 210 16 view .LVU37
 151 005a 0723     		movs	r3, #7
 152 005c 1340     		ands	r3, r2
 153              	.LVL16:
 211:Core/Src/system_stm32l0xx.c ****       break;
 154              		.loc 1 211 7 is_stmt 1 view .LVU38
 211:Core/Src/system_stm32l0xx.c ****       break;
 155              		.loc 1 211 52 is_stmt 0 view .LVU39
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 8


 156 005e 0133     		adds	r3, r3, #1
 157              	.LVL17:
 211:Core/Src/system_stm32l0xx.c ****       break;
 158              		.loc 1 211 33 view .LVU40
 159 0060 8022     		movs	r2, #128
 160 0062 1202     		lsls	r2, r2, #8
 161 0064 9A40     		lsls	r2, r2, r3
 162 0066 1300     		movs	r3, r2
 163              	.LVL18:
 211:Core/Src/system_stm32l0xx.c ****       break;
 164              		.loc 1 211 23 view .LVU41
 165 0068 1C4A     		ldr	r2, .L11+8
 166 006a 1360     		str	r3, [r2]
 212:Core/Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 167              		.loc 1 212 7 is_stmt 1 view .LVU42
 168              	.LVL19:
 169              	.L6:
 241:Core/Src/system_stm32l0xx.c ****         }
 242:Core/Src/system_stm32l0xx.c ****         else
 243:Core/Src/system_stm32l0xx.c ****         {
 244:Core/Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 245:Core/Src/system_stm32l0xx.c ****         }
 246:Core/Src/system_stm32l0xx.c ****       }
 247:Core/Src/system_stm32l0xx.c ****       else
 248:Core/Src/system_stm32l0xx.c ****       {
 249:Core/Src/system_stm32l0xx.c ****         /* HSE selected as PLL clock entry */
 250:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 251:Core/Src/system_stm32l0xx.c ****       }
 252:Core/Src/system_stm32l0xx.c ****       break;
 253:Core/Src/system_stm32l0xx.c ****   }
 254:Core/Src/system_stm32l0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 255:Core/Src/system_stm32l0xx.c ****   /* Get HCLK prescaler */
 256:Core/Src/system_stm32l0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 170              		.loc 1 256 3 view .LVU43
 171              		.loc 1 256 28 is_stmt 0 view .LVU44
 172 006c 194B     		ldr	r3, .L11
 173 006e DA68     		ldr	r2, [r3, #12]
 174              		.loc 1 256 52 view .LVU45
 175 0070 1209     		lsrs	r2, r2, #4
 176 0072 0F23     		movs	r3, #15
 177 0074 1340     		ands	r3, r2
 178              		.loc 1 256 22 view .LVU46
 179 0076 1A4A     		ldr	r2, .L11+12
 180 0078 D35C     		ldrb	r3, [r2, r3]
 181              	.LVL20:
 257:Core/Src/system_stm32l0xx.c ****   /* HCLK clock frequency */
 258:Core/Src/system_stm32l0xx.c ****   SystemCoreClock >>= tmp;
 182              		.loc 1 258 3 is_stmt 1 view .LVU47
 183              		.loc 1 258 19 is_stmt 0 view .LVU48
 184 007a 184A     		ldr	r2, .L11+8
 185 007c 1168     		ldr	r1, [r2]
 186 007e D940     		lsrs	r1, r1, r3
 187 0080 1160     		str	r1, [r2]
 259:Core/Src/system_stm32l0xx.c **** }
 188              		.loc 1 259 1 view .LVU49
 189              		@ sp needed
 190 0082 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 9


 191              	.LVL21:
 192              	.L3:
 214:Core/Src/system_stm32l0xx.c ****       {
 193              		.loc 1 214 7 is_stmt 1 view .LVU50
 214:Core/Src/system_stm32l0xx.c ****       {
 194              		.loc 1 214 15 is_stmt 0 view .LVU51
 195 0084 134B     		ldr	r3, .L11
 196              	.LVL22:
 214:Core/Src/system_stm32l0xx.c ****       {
 197              		.loc 1 214 15 view .LVU52
 198 0086 1B68     		ldr	r3, [r3]
 214:Core/Src/system_stm32l0xx.c ****       {
 199              		.loc 1 214 10 view .LVU53
 200 0088 DB06     		lsls	r3, r3, #27
 201 008a 03D5     		bpl	.L7
 216:Core/Src/system_stm32l0xx.c ****       }
 202              		.loc 1 216 9 is_stmt 1 view .LVU54
 216:Core/Src/system_stm32l0xx.c ****       }
 203              		.loc 1 216 25 is_stmt 0 view .LVU55
 204 008c 134B     		ldr	r3, .L11+8
 205 008e 154A     		ldr	r2, .L11+16
 206              	.LVL23:
 216:Core/Src/system_stm32l0xx.c ****       }
 207              		.loc 1 216 25 view .LVU56
 208 0090 1A60     		str	r2, [r3]
 209 0092 EBE7     		b	.L6
 210              	.LVL24:
 211              	.L7:
 220:Core/Src/system_stm32l0xx.c ****       }
 212              		.loc 1 220 9 is_stmt 1 view .LVU57
 220:Core/Src/system_stm32l0xx.c ****       }
 213              		.loc 1 220 25 is_stmt 0 view .LVU58
 214 0094 114B     		ldr	r3, .L11+8
 215 0096 144A     		ldr	r2, .L11+20
 216              	.LVL25:
 220:Core/Src/system_stm32l0xx.c ****       }
 217              		.loc 1 220 25 view .LVU59
 218 0098 1A60     		str	r2, [r3]
 219 009a E7E7     		b	.L6
 220              	.LVL26:
 221              	.L4:
 224:Core/Src/system_stm32l0xx.c ****       break;
 222              		.loc 1 224 7 is_stmt 1 view .LVU60
 224:Core/Src/system_stm32l0xx.c ****       break;
 223              		.loc 1 224 23 is_stmt 0 view .LVU61
 224 009c 0F4B     		ldr	r3, .L11+8
 225              	.LVL27:
 224:Core/Src/system_stm32l0xx.c ****       break;
 226              		.loc 1 224 23 view .LVU62
 227 009e 134A     		ldr	r2, .L11+24
 228              	.LVL28:
 224:Core/Src/system_stm32l0xx.c ****       break;
 229              		.loc 1 224 23 view .LVU63
 230 00a0 1A60     		str	r2, [r3]
 225:Core/Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 231              		.loc 1 225 7 is_stmt 1 view .LVU64
 232 00a2 E3E7     		b	.L6
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 10


 233              	.LVL29:
 234              	.L9:
 244:Core/Src/system_stm32l0xx.c ****         }
 235              		.loc 1 244 11 view .LVU65
 244:Core/Src/system_stm32l0xx.c ****         }
 236              		.loc 1 244 43 is_stmt 0 view .LVU66
 237 00a4 6301     		lsls	r3, r4, #5
 238 00a6 1B1B     		subs	r3, r3, r4
 239 00a8 9801     		lsls	r0, r3, #6
 240 00aa C01A     		subs	r0, r0, r3
 241 00ac C000     		lsls	r0, r0, #3
 242 00ae 0019     		adds	r0, r0, r4
 243 00b0 8002     		lsls	r0, r0, #10
 244:Core/Src/system_stm32l0xx.c ****         }
 244              		.loc 1 244 53 view .LVU67
 245 00b2 FFF7FEFF 		bl	__aeabi_uidiv
 246              	.LVL30:
 244:Core/Src/system_stm32l0xx.c ****         }
 247              		.loc 1 244 27 view .LVU68
 248 00b6 094B     		ldr	r3, .L11+8
 249 00b8 1860     		str	r0, [r3]
 250 00ba D7E7     		b	.L6
 251              	.LVL31:
 252              	.L8:
 250:Core/Src/system_stm32l0xx.c ****       }
 253              		.loc 1 250 9 is_stmt 1 view .LVU69
 250:Core/Src/system_stm32l0xx.c ****       }
 254              		.loc 1 250 41 is_stmt 0 view .LVU70
 255 00bc 6001     		lsls	r0, r4, #5
 256 00be 001B     		subs	r0, r0, r4
 257 00c0 8301     		lsls	r3, r0, #6
 258 00c2 181A     		subs	r0, r3, r0
 259 00c4 C000     		lsls	r0, r0, #3
 260 00c6 0019     		adds	r0, r0, r4
 261 00c8 4002     		lsls	r0, r0, #9
 250:Core/Src/system_stm32l0xx.c ****       }
 262              		.loc 1 250 51 view .LVU71
 263 00ca FFF7FEFF 		bl	__aeabi_uidiv
 264              	.LVL32:
 250:Core/Src/system_stm32l0xx.c ****       }
 265              		.loc 1 250 25 view .LVU72
 266 00ce 034B     		ldr	r3, .L11+8
 267 00d0 1860     		str	r0, [r3]
 268 00d2 CBE7     		b	.L6
 269              	.L12:
 270              		.align	2
 271              	.L11:
 272 00d4 00100240 		.word	1073876992
 273 00d8 00000000 		.word	.LANCHOR1
 274 00dc 00000000 		.word	.LANCHOR0
 275 00e0 00000000 		.word	.LANCHOR2
 276 00e4 00093D00 		.word	4000000
 277 00e8 0024F400 		.word	16000000
 278 00ec 00127A00 		.word	8000000
 279              		.cfi_endproc
 280              	.LFE41:
 282              		.global	PLLMulTable
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 11


 283              		.global	APBPrescTable
 284              		.global	AHBPrescTable
 285              		.global	SystemCoreClock
 286              		.section	.data.SystemCoreClock,"aw"
 287              		.align	2
 288              		.set	.LANCHOR0,. + 0
 291              	SystemCoreClock:
 292 0000 00002000 		.word	2097152
 293              		.section	.rodata.AHBPrescTable,"a"
 294              		.align	2
 295              		.set	.LANCHOR2,. + 0
 298              	AHBPrescTable:
 299 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 299      00000000 
 299      01020304 
 299      06
 300 000d 070809   		.ascii	"\007\010\011"
 301              		.section	.rodata.APBPrescTable,"a"
 302              		.align	2
 305              	APBPrescTable:
 306 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 306      01020304 
 307              		.section	.rodata.PLLMulTable,"a"
 308              		.align	2
 309              		.set	.LANCHOR1,. + 0
 312              	PLLMulTable:
 313 0000 03040608 		.ascii	"\003\004\006\010\014\020\030 0"
 313      0C101820 
 313      30
 314              		.text
 315              	.Letext0:
 316              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 317              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 318              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 319              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l010x4.h"
ARM GAS  C:\Users\emile\AppData\Local\Temp\ccya7rNb.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l0xx.c
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:18     .text.SystemInit:00000000 $t
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:24     .text.SystemInit:00000000 SystemInit
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:40     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:46     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:272    .text.SystemCoreClockUpdate:000000d4 $d
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:312    .rodata.PLLMulTable:00000000 PLLMulTable
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:305    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:298    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:291    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:287    .data.SystemCoreClock:00000000 $d
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:294    .rodata.AHBPrescTable:00000000 $d
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:302    .rodata.APBPrescTable:00000000 $d
C:\Users\emile\AppData\Local\Temp\ccya7rNb.s:308    .rodata.PLLMulTable:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
